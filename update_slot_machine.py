#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sqlite3
import os
import shutil
from datetime import datetime

def backup_database():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    if not os.path.exists('data'):
        os.makedirs('data')
    
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_path = f"data/users_backup_slot_update_{timestamp}.db"
    
    if os.path.exists('data/users.db'):
        shutil.copy2('data/users.db', backup_path)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
        return backup_path
    else:
        print("‚ùå –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return None

def update_slot_configurations():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º"""
    
    # –ù–æ–≤—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∏–∑–∞–º–∏ –∏ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏ ‚â§2%
    new_slot_configs = [
        ('üçíüçíüçí', 'money', 5, 0.8, 'üçí', '–í–∏—à–Ω–∏'),           # 0.8% - 5‚ÇΩ
        ('üçäüçäüçä', 'money', 10, 0.6, 'üçä', '–ê–ø–µ–ª—å—Å–∏–Ω'),       # 0.6% - 10‚ÇΩ
        ('üçãüçãüçã', 'stars', 13, 0.3, 'üçã', '–õ–∏–º–æ–Ω'),          # 0.3% - 13‚≠ê
        ('üçáüçáüçá', 'stars', 21, 0.15, 'üçá', '–í–∏–Ω–æ–≥—Ä–∞–¥'),      # 0.15% - 21‚≠ê
        ('üíéüíéüíé', 'ton', 0.5, 0.08, 'üíé', '–ê–ª–º–∞–∑'),          # 0.08% - 0.5 TON
        ('‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è', 'stars', 50, 0.03, '‚≠êÔ∏è', '–ó–≤–µ–∑–¥—ã'),       # 0.03% - 50‚≠ê
        ('üîîüîîüîî', 'money', 100, 0.02, 'üîî', '–ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫'),   # 0.02% - 100‚ÇΩ
        ('üí∞üí∞üí∞', 'stars', 75, 0.008, 'üí∞', '–ú–µ—à–æ–∫ –¥–µ–Ω–µ–≥'),  # 0.008% - 75‚≠ê
        ('üé∞üé∞üé∞', 'ton', 1.0, 0.001, 'üé∞', '–î–∂–µ–∫–ø–æ—Ç'),       # 0.001% - 1 TON
        ('7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£', 'stars', 100, 0.001, '7Ô∏è‚É£', '–¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏'), # 0.001% - 100‚≠ê
    ]
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç
    total_percent = sum(config[3] for config in new_slot_configs)
    
    print(f"üé∞ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô –°–õ–û–¢-–ú–ê–®–ò–ù–´")
    print("=" * 50)
    print(f"üìä –ù–æ–≤—ã–π –æ–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–µ–π: {total_percent}%")
    
    if total_percent > 2.0:
        print(f"‚ùå –û–®–ò–ë–ö–ê: –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç ({total_percent}%) –ø—Ä–µ–≤—ã—à–∞–µ—Ç 2%!")
        return False
    
    conn = sqlite3.connect('data/users.db')
    cursor = conn.cursor()
    
    try:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        cursor.execute("DELETE FROM slot_config")
        print("üóëÔ∏è –°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        for combo, reward_type, reward_amount, chance, emoji, name in new_slot_configs:
            cursor.execute('''
                INSERT INTO slot_config (combination, reward_type, reward_amount, chance_percent, emoji, name)
                VALUES (?, ?, ?, ?, ?, ?)
            ''', (combo, reward_type, reward_amount, chance, emoji, name))
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–∞–≥—Ä–∞–¥—É –¥–ª—è –≤—ã–≤–æ–¥–∞
            if reward_type == "money":
                reward_text = f"{int(reward_amount)}‚ÇΩ"
            elif reward_type == "stars":
                reward_text = f"{int(reward_amount)}‚≠ê"
            elif reward_type == "ton":
                reward_text = f"{reward_amount} TON"
            else:
                reward_text = str(reward_amount)
            
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {name} ({combo}) - {chance}% - {reward_text}")
        
        conn.commit()
        print(f"\nüéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã! –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç: {total_percent}%")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: {e}")
        conn.rollback()
        return False
    finally:
        conn.close()

def update_code_defaults():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –∫–æ–¥–µ"""
    
    new_code_configs = '''    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã (–û–ë–ù–û–í–õ–ï–ù–ù–´–ï –ü–†–ò–ó–´)
    # –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–µ–π: 2.0% (–≤–∫–ª—é—á–∞—è –¥–∂–µ–∫–ø–æ—Ç –∏ —Å–µ–º–µ—Ä–∫–∏)
    default_slot_configs = [
        ('üçíüçíüçí', 'money', 5, 0.8, 'üçí', '–í–∏—à–Ω–∏'),           # 0.8% - 5‚ÇΩ
        ('üçäüçäüçä', 'money', 10, 0.6, 'üçä', '–ê–ø–µ–ª—å—Å–∏–Ω'),       # 0.6% - 10‚ÇΩ
        ('üçãüçãüçã', 'stars', 13, 0.3, 'üçã', '–õ–∏–º–æ–Ω'),          # 0.3% - 13‚≠ê
        ('üçáüçáüçá', 'stars', 21, 0.15, 'üçá', '–í–∏–Ω–æ–≥—Ä–∞–¥'),      # 0.15% - 21‚≠ê
        ('üíéüíéüíé', 'ton', 0.5, 0.08, 'üíé', '–ê–ª–º–∞–∑'),          # 0.08% - 0.5 TON
        ('‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è', 'stars', 50, 0.03, '‚≠êÔ∏è', '–ó–≤–µ–∑–¥—ã'),       # 0.03% - 50‚≠ê
        ('üîîüîîüîî', 'money', 100, 0.02, 'üîî', '–ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫'),   # 0.02% - 100‚ÇΩ
        ('üí∞üí∞üí∞', 'stars', 75, 0.008, 'üí∞', '–ú–µ—à–æ–∫ –¥–µ–Ω–µ–≥'),  # 0.008% - 75‚≠ê
        ('üé∞üé∞üé∞', 'ton', 1.0, 0.001, 'üé∞', '–î–∂–µ–∫–ø–æ—Ç'),       # 0.001% - 1 TON
        ('7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£', 'stars', 100, 0.001, '7Ô∏è‚É£', '–¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏'), # 0.001% - 100‚≠ê
    ]'''
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        with open('app/database/models.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ù–∞—Ö–æ–¥–∏–º –∏ –∑–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ü–∏—é —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏
        start_marker = "    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã"
        end_marker = "    ]"
        
        start_pos = content.find(start_marker)
        if start_pos == -1:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–∞—Ä–∫–µ—Ä –Ω–∞—á–∞–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π")
            return False
        
        # –ò—â–µ–º –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ –ø–æ—Å–ª–µ start_pos
        temp_pos = start_pos
        bracket_count = 0
        found_start = False
        end_pos = -1
        
        for i, char in enumerate(content[start_pos:], start_pos):
            if char == '[':
                found_start = True
                bracket_count += 1
            elif char == ']' and found_start:
                bracket_count -= 1
                if bracket_count == 0:
                    end_pos = i + 1
                    break
        
        if end_pos == -1:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π")
            return False
        
        # –ó–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ü–∏—é
        new_content = content[:start_pos] + new_code_configs + content[end_pos:]
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open('app/database/models.py', 'w', encoding='utf-8') as f:
            f.write(new_content)
        
        print("‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –∫–æ–¥–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–¥–∞: {e}")
        return False

def main():
    print("üé∞ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–õ–û–¢-–ú–ê–®–ò–ù–´")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = backup_database()
    if not backup_path:
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –ë–î
    if not update_slot_configurations():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –ë–î")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
    if not update_code_defaults():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥")
        return
    
    print("\nüéâ –í–°–ï –ó–ê–î–ê–ß–ò –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("‚úÖ –°–ª–æ—Ç-–º–∞—à–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –¥–∂–µ–∫–ø–æ—Ç –∏ —Ç—Ä–∏ —Å–µ–º–µ—Ä–∫–∏")
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–∏–∑—ã")
    print("‚úÖ –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç ‚â§2%")
    print("‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    main()
