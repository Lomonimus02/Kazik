#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–∑—ã–≤–æ–≤
"""
import sys
import os
import sqlite3
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database.models import (
    create_review, get_review_by_id, get_all_reviews, 
    update_review_status, delete_review, clear_all_reviews
)

def test_reviews_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –æ—Ç–∑—ã–≤–æ–≤"""
    print("üß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –û–¢–ó–´–í–û–í")
    print("=" * 60)
    
    try:
        # 1. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
        print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞...")
        review_id = create_review(
            user_id=123456789,
            content="–û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å! –ë—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ!",
            file_id=None,
            status="pending"
        )
        print(f"   –û—Ç–∑—ã–≤ —Å–æ–∑–¥–∞–Ω —Å ID: {review_id}")
        
        # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ –ø–æ ID
        print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ –ø–æ ID...")
        review = get_review_by_id(review_id)
        if review:
            print(f"   –û—Ç–∑—ã–≤ –Ω–∞–π–¥–µ–Ω: {review['content'][:50]}...")
            print(f"   –°—Ç–∞—Ç—É—Å: {review['status']}")
        else:
            print("   ‚ùå –û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–∑—ã–≤–∞
        print("\n3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–∑—ã–≤–∞...")
        update_review_status(review_id, status="published")
        updated_review = get_review_by_id(review_id)
        if updated_review and updated_review['status'] == 'published':
            print("   ‚úÖ –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ 'published'")
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")
        
        # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤
        print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤...")
        all_reviews = get_all_reviews()
        print(f"   –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤ –≤ –ë–î: {len(all_reviews)}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã
        print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã reviews...")
        conn = sqlite3.connect('data/users.db')
        cursor = conn.cursor()
        cursor.execute("PRAGMA table_info(reviews)")
        columns = cursor.fetchall()
        print("   –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:")
        for col in columns:
            print(f"     - {col[1]} ({col[2]})")
        
        # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
        cursor.execute("SELECT COUNT(*) FROM reviews")
        count = cursor.fetchone()[0]
        print(f"   –ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {count}")
        
        conn.close()
        
        # 7. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞
        print("\n6. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞...")
        delete_review(review_id)
        deleted_review = get_review_by_id(review_id)
        if not deleted_review:
            print("   ‚úÖ –û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞")
        
        print("\n‚úÖ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç–∑—ã–≤–æ–≤ –ó–ê–í–ï–†–®–ï–ù!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_reviews_system()
