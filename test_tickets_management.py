#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –∏ —Ç–∏–∫–µ—Ç–∞–º–∏
"""

import os
import sys
import shutil
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout)
    ]
)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.abspath('.'))

from app.database.models import (
    init_db, get_or_create_user, create_order, get_all_orders, clear_all_orders,
    create_support_ticket, get_all_support_tickets, delete_support_ticket, clear_all_support_tickets
)

def setup_test_db():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –±–∞–∑—ã
    if os.path.exists('users.db'):
        shutil.copy2('users.db', 'users_backup_tickets_test.db')
        logging.info("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –±–∞–∑—É –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
    if os.path.exists('users.db'):
        os.remove('users.db')
    
    init_db()
    logging.info("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")

def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_tg_id = 888888888
    user = get_or_create_user(test_tg_id, "Test User Tickets", "test_user_tickets", datetime.now().isoformat())
    logging.info(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['username']} (ID: {test_tg_id})")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏
    create_order(user['id'], 'premium', 100.0, 'pending', extra_data='{"description": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –ø—Ä–µ–º–∏—É–º"}')
    create_order(user['id'], 'stars', 50.0, 'pending', extra_data='{"description": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∑–≤–µ–∑–¥—ã"}')
    create_order(user['id'], 'crypto', 200.0, 'pending', extra_data='{"description": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∫—Ä–∏–ø—Ç–∞"}')
    logging.info("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–∏–∫–µ—Ç—ã
    create_support_ticket(user['id'], user['username'], user['full_name'], "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∏–∫–µ—Ç 1")
    create_support_ticket(user['id'], user['username'], user['full_name'], "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∏–∫–µ—Ç 2")
    create_support_ticket(user['id'], user['username'], user['full_name'], "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∏–∫–µ—Ç 3")
    logging.info("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–∏–∫–µ—Ç—ã")
    
    return user

def test_orders_management():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏"""
    logging.info("üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—è–≤–∫–∏ —Å–æ–∑–¥–∞–Ω—ã
    orders = get_all_orders()
    if len(orders) != 3:
        raise Exception(f"–û–∂–∏–¥–∞–ª–æ—Å—å 3 –∑–∞—è–≤–∫–∏, –Ω–∞–π–¥–µ–Ω–æ {len(orders)}")
    logging.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(orders)} –∑–∞—è–≤–æ–∫")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫
    clear_all_orders()
    orders_after = get_all_orders()
    if len(orders_after) != 0:
        raise Exception(f"–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0 –∑–∞—è–≤–æ–∫, –Ω–∞–π–¥–µ–Ω–æ {len(orders_after)}")
    logging.info("‚úÖ –í—Å–µ –∑–∞—è–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã")

def test_tickets_management():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞–º–∏"""
    logging.info("üéüÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞–º–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∏–∫–µ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã
    tickets = get_all_support_tickets()
    if len(tickets) != 3:
        raise Exception(f"–û–∂–∏–¥–∞–ª–æ—Å—å 3 —Ç–∏–∫–µ—Ç–∞, –Ω–∞–π–¥–µ–Ω–æ {len(tickets)}")
    logging.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(tickets)} —Ç–∏–∫–µ—Ç–æ–≤")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ç–∏–∫–µ—Ç–∞
    first_ticket_id = tickets[0][0]  # ID –ø–µ—Ä–≤–æ–≥–æ —Ç–∏–∫–µ—Ç–∞
    delete_support_ticket(first_ticket_id)
    tickets_after_single_delete = get_all_support_tickets()
    if len(tickets_after_single_delete) != 2:
        raise Exception(f"–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è 2, –Ω–∞–π–¥–µ–Ω–æ {len(tickets_after_single_delete)}")
    logging.info(f"‚úÖ –¢–∏–∫–µ—Ç #{first_ticket_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∏–∫–µ—Ç–æ–≤
    clear_all_support_tickets()
    tickets_after_clear = get_all_support_tickets()
    if len(tickets_after_clear) != 0:
        raise Exception(f"–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–∏–∫–µ—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0, –Ω–∞–π–¥–µ–Ω–æ {len(tickets_after_clear)}")
    logging.info("‚úÖ –í—Å–µ —Ç–∏–∫–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã")

def restore_original_db():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    if os.path.exists('users_backup_tickets_test.db'):
        if os.path.exists('users.db'):
            os.remove('users.db')
        shutil.move('users_backup_tickets_test.db', 'users.db')
        logging.info("‚úÖ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    try:
        logging.info("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –∏ —Ç–∏–∫–µ—Ç–∞–º–∏")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã
        setup_test_db()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        user = create_test_data()
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
        test_orders_management()
        test_tickets_management()
        
        logging.info("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\n‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –∏ —Ç–∏–∫–µ—Ç–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print("  - –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫: ‚úÖ")
        print("  - –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤: ‚úÖ") 
        print("  - –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∏–∫–µ—Ç–æ–≤: ‚úÖ")
        
    except Exception as e:
        logging.error(f"‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù: {e}")
        print(f"\n‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.")
        return False
    finally:
        restore_original_db()
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
