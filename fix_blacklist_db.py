#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
"""
import asyncio
import aiosqlite
import os

async def fix_blacklist_database():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞"""
    db_path = 'data/blacklist.db'
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs('data', exist_ok=True)
    
    async with aiosqlite.connect(db_path) as db:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cursor = await db.execute("PRAGMA table_info(blacklist)")
        columns = await cursor.fetchall()
        
        if columns:
            print("–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã:")
            for col in columns:
                print(f"  - {col[1]} ({col[2]})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç–æ–ª–±–µ—Ü date
            column_names = [col[1] for col in columns]
            if 'date' not in column_names:
                print("–î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'date'...")
                await db.execute("ALTER TABLE blacklist ADD COLUMN date TEXT DEFAULT ''")
                await db.commit()
                print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'date' –¥–æ–±–∞–≤–ª–µ–Ω")
            else:
                print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'date' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("–¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é...")
            await db.execute('''
                CREATE TABLE blacklist (
                    tg_id INTEGER PRIMARY KEY,
                    reason TEXT,
                    date TEXT
                )
            ''')
            await db.commit()
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ blacklist —Å–æ–∑–¥–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cursor = await db.execute("PRAGMA table_info(blacklist)")
        columns = await cursor.fetchall()
        print("\n–§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
        for col in columns:
            print(f"  - {col[1]} ({col[2]})")

if __name__ == "__main__":
    asyncio.run(fix_blacklist_database())
