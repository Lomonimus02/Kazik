#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–æ—Ç–∞
"""
import asyncio
import logging
from app.database.models import (
    init_db, init_activity_rewards_custom, create_roulette_tables, init_roulette_configs
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def setup_all():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö"""
    try:
        logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –ë–î
        logger.info("üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        init_db()
        logger.info("‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è –ë–î –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–æ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        logger.info("üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–æ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
        init_activity_rewards_custom()
        logger.info("‚úÖ –ü—Ä–∏–∑—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        logger.info("üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
        logger.info("\nüìã –ß—Ç–æ –±—ã–ª–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:")
        logger.info("‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏")
        logger.info("‚Ä¢ –ü—Ä–∏–∑—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω—ã)")
        logger.info("‚Ä¢ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä—É–ª–µ—Ç–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        logger.info("‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
        logger.info("‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–∫—É–ø–æ–∫")
        logger.info("\nüöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(setup_all()) 