#!/usr/bin/env python3
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π (Tasks 1-9)
"""
import asyncio
import os
import sys
import json
import datetime
import random

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.abspath('.'))

try:
    from app.database.models import (
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        get_or_create_user, get_user_profile, get_user_profile_by_id,
        # –ó–∞–∫–∞–∑—ã
        create_order, get_order_by_id, update_order_status, get_all_orders,
        # –°–ª–æ—Ç-–º–∞—à–∏–Ω–∞
        get_slot_configs, add_slot_config, delete_slot_config,
        get_user_slot_spins, use_slot_spin, reset_slot_spins,
        create_slot_win, get_slot_wins, update_slot_win_status,
        # –ê–¥–º–∏–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        get_admin_setting, update_admin_setting
    )

    # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    try:
        from app.database.models import add_to_blacklist, remove_from_blacklist, is_blacklisted, get_blacklist
        BLACKLIST_AVAILABLE = True
    except ImportError:
        BLACKLIST_AVAILABLE = False
        print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

    try:
        from app.database.models import create_ticket, get_ticket_by_id, update_ticket_status, get_all_tickets
        TICKETS_AVAILABLE = True
    except ImportError:
        TICKETS_AVAILABLE = False
        print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

    try:
        from app.database.models import get_referral_percentage, update_referral_percentage
        REFERRAL_AVAILABLE = True
    except ImportError:
        REFERRAL_AVAILABLE = False
        print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

    try:
        from app.database.models import get_content, update_content
        CONTENT_AVAILABLE = True
    except ImportError:
        CONTENT_AVAILABLE = False
        print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

def test_slot_machine_system():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã"""
    print("\nüé∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã...")
    
    try:
        # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã
        print("  üìã –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–µ–π
        import time
        unique_combo = f"üß™üß™üß™{int(time.time())}"  # –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∞
        config_id = add_slot_config(unique_combo, "money", 10.0, 13.0, "üß™", "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è")
        if config_id:
            print(f"  ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞: ID {config_id}")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            configs = get_slot_configs()
            if configs:
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(configs)} –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—à—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                our_config = next((c for c in configs if c[0] == config_id), None)
                if our_config:
                    print(f"  ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: {our_config[5]} - {our_config[4]}%")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            delete_slot_config(config_id)
            print(f"  ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞")
        
        # –¢–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–ø–∏–Ω–æ–≤
        print("  üé≤ –¢–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–ø–∏–Ω–æ–≤...")

        test_user_id = 999001
        spins_data = get_user_slot_spins(test_user_id)
        if spins_data:
            spins_used, last_reset = spins_data
            print(f"  ‚úÖ –°–ø–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {spins_used}, –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–±—Ä–æ—Å {last_reset}")

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–∏–Ω
            use_slot_spin(test_user_id)
            print(f"  ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Å–ø–∏–Ω")

            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ø–∏–Ω—ã
            reset_slot_spins(test_user_id)
            print(f"  ‚úÖ –°–ø–∏–Ω—ã —Å–±—Ä–æ—à–µ–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã: {e}")
        return False

def test_blacklist_system():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞"""
    print("\nüö´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞...")

    if not BLACKLIST_AVAILABLE:
        print("  ‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
        return True

    try:
        test_user_id = 999002
        test_reason = "–¢–µ—Å—Ç–æ–≤–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞"

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
        add_to_blacklist(test_user_id, test_reason)
        print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
        if is_blacklisted(test_user_id):
            print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
        blacklist = get_blacklist()
        if blacklist:
            found = any(entry[0] == test_user_id for entry in blacklist)
            if found:
                print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö")

        # –£–¥–∞–ª—è–µ–º –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
        remove_from_blacklist(test_user_id)
        print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É
        if not is_blacklisted(test_user_id):
            print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: {e}")
        return False

def test_ticket_system():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ç–∏–∫–µ—Ç–æ–≤"""
    print("\nüé´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ç–∏–∫–µ—Ç–æ–≤...")

    if not TICKETS_AVAILABLE:
        print("  ‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
        return True

    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_tg_id = 999004
        get_or_create_user(test_tg_id, "–¢–µ—Å—Ç –¢–∏–∫–µ—Ç—ã", "test_tickets", "2024-01-01", None)
        user_profile = get_user_profile(test_tg_id)

        # –°–æ–∑–¥–∞–µ–º —Ç–∏–∫–µ—Ç
        ticket_id = create_ticket(
            user_id=user_profile['id'],
            subject="–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∏–∫–µ—Ç",
            message="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            file_id="test_file"
        )

        if ticket_id:
            print(f"  ‚úÖ –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω: ID {ticket_id}")

            # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–∫–µ—Ç
            ticket = get_ticket_by_id(ticket_id)
            if ticket:
                print(f"  ‚úÖ –¢–∏–∫–µ—Ç –Ω–∞–π–¥–µ–Ω: {ticket['subject']}")

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                update_ticket_status(ticket_id, "in_progress")
                updated_ticket = get_ticket_by_id(ticket_id)
                if updated_ticket and updated_ticket['status'] == 'in_progress':
                    print(f"  ‚úÖ –°—Ç–∞—Ç—É—Å —Ç–∏–∫–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω: {updated_ticket['status']}")

                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∏–∫–µ—Ç—ã
                all_tickets = get_all_tickets()
                if all_tickets:
                    print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(all_tickets)} —Ç–∏–∫–µ—Ç–æ–≤")

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö —Ç–∏–∫–µ—Ç–æ–≤: {e}")
        return False

def test_referral_system():
    """–¢–µ—Å—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")

    if not REFERRAL_AVAILABLE:
        print("  ‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
        return True

    try:
        # –¢–µ—Å—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        current_percentage = get_referral_percentage()
        print(f"  üìä –¢–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {current_percentage}%")

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç
        new_percentage = 15.0
        update_referral_percentage(new_percentage)
        updated_percentage = get_referral_percentage()

        if updated_percentage == new_percentage:
            print(f"  ‚úÖ –ü—Ä–æ—Ü–µ–Ω—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω: {updated_percentage}%")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç
        update_referral_percentage(current_percentage)
        print(f"  ‚úÖ –ü—Ä–æ—Ü–µ–Ω—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {current_percentage}%")

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {e}")
        return False

def test_content_system():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")

    if not CONTENT_AVAILABLE:
        print("  ‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
        return True

    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        sections = ['slot', 'calendar', 'profile', 'support', 'reviews']

        for section in sections:
            content = get_content(section)
            if content:
                print(f"  ‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–µ–∫—Ü–∏–∏ '{section}': {len(content.get('text', ''))} —Å–∏–º–≤–æ–ª–æ–≤")

                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                test_text = f"–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è {section}"
                test_photo = f"test_photo_{section}"
                test_buttons = json.dumps([{"text": f"–ö–Ω–æ–ø–∫–∞ {section}", "url": "https://example.com"}])

                update_content(section, test_text, test_photo, test_buttons)
                updated_content = get_content(section)

                if updated_content and updated_content['text'] == test_text:
                    print(f"  ‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–µ–∫—Ü–∏–∏ '{section}' –æ–±–Ω–æ–≤–ª–µ–Ω")

                # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
                if content:
                    update_content(section, content.get('text', ''), content.get('photo', ''), content.get('buttons', ''))

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
        return False

def test_admin_settings():
    """–¢–µ—Å—Ç –∞–¥–º–∏–Ω—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print("\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        settings = ['subscription_required_slot', 'subscription_required_calendar', 'subscription_required_profile']
        
        for setting in settings:
            current_value = get_admin_setting(setting)
            print(f"  üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ '{setting}': {current_value}")
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
            new_value = not current_value if current_value is not None else True
            update_admin_setting(setting, new_value)
            
            updated_value = get_admin_setting(setting)
            if updated_value == new_value:
                print(f"  ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ '{setting}' –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {updated_value}")
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            update_admin_setting(setting, current_value)
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö –∞–¥–º–∏–Ω—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

def test_orders_system():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫–∞–∑–æ–≤ (—É–∂–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ)"""
    print("\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫–∞–∑–æ–≤...")

    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_tg_id = 999005
        get_or_create_user(test_tg_id, "–¢–µ—Å—Ç –ó–∞–∫–∞–∑—ã", "test_orders", "2024-01-01", None)
        user_profile = get_user_profile(test_tg_id)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
        order_id = create_order(
            user_id=user_profile['id'],
            order_type="test",
            amount=100.0,
            status="pending",
            file_id="test_file",
            extra_data={"test": "data"}
        )

        if order_id:
            print(f"  ‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: ID {order_id}")

            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑
            order = get_order_by_id(order_id)
            if order:
                print(f"  ‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω: —Ç–∏–ø {order['order_type']}, —Å—É–º–º–∞ {order['amount']}‚ÇΩ")

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                success = update_order_status(order_id, status="completed")
                if success:
                    print(f"  ‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω")

                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
                all_orders = get_all_orders()
                if all_orders:
                    print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(all_orders)} –∑–∞–∫–∞–∑–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö –∑–∞–∫–∞–∑–æ–≤: {e}")
        return False

def run_comprehensive_tests():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üß™ –ó–ê–ü–£–°–ö –ö–û–ú–ü–õ–ï–ö–°–ù–´–• –¢–ï–°–¢–û–í –í–°–ï–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 60)

    tests = [
        ("–°–ª–æ—Ç-–º–∞—à–∏–Ω–∞", test_slot_machine_system),
        ("–°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤", test_orders_system),
        ("–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫", test_blacklist_system),
        ("–°–∏—Å—Ç–µ–º–∞ —Ç–∏–∫–µ—Ç–æ–≤", test_ticket_system),
        ("–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", test_referral_system),
        ("–°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞", test_content_system),
        ("–ê–¥–º–∏–Ω—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", test_admin_settings),
    ]
    
    passed = 0
    failed = 0
    
    for test_name, test_func in tests:
        try:
            print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {test_name}")
            if test_func():
                print(f"‚úÖ {test_name}: –ü–†–û–ô–î–ï–ù")
                passed += 1
            else:
                print(f"‚ùå {test_name}: –ü–†–û–í–ê–õ–ï–ù")
                failed += 1
        except Exception as e:
            print(f"‚ùå {test_name}: –û–®–ò–ë–ö–ê - {e}")
            failed += 1
    
    print("\n" + "=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {failed}")
    print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {(passed/(passed+failed)*100):.1f}%" if (passed+failed) > 0 else "0%")
    
    if failed == 0:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        return True
    else:
        print(f"\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í {failed} –¢–ï–°–¢–ê–•!")
        return False

if __name__ == "__main__":
    success = run_comprehensive_tests()
    if not success:
        sys.exit(1)
