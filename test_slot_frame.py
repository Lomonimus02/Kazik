#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞–∑–º–µ—Ä–∞ —Ä–∞–º–∫–∏ —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.utils.slot_machine import CENTERED_FRAME, format_slot_result

def test_frame_size():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä —Ä–∞–º–∫–∏ —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã"""
    print("üé∞ –¢–ï–°–¢ –†–ê–ó–ú–ï–†–ê –†–ê–ú–ö–ò –°–õ–û–¢-–ú–ê–®–ò–ù–´")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–º–∫—É —Å —Ä–∞–∑–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏
    frame = CENTERED_FRAME.format(s1="üçã", s2="üíé", s3="üé∞")
    print("–¢–µ–∫—É—â–∞—è —Ä–∞–º–∫–∞:")
    print(frame)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫
    lines = frame.split('\n')
    print("–ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞:")
    for i, line in enumerate(lines):
        print(f"–°—Ç—Ä–æ–∫–∞ {i+1}: '{line}' (–¥–ª–∏–Ω–∞: {len(line)})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞–º–∫–∞ –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è
    max_length = max(len(line) for line in lines)
    print(f"\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏: {max_length}")
    
    if max_length <= 12:  # –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Ä–∞–º–∫–∞
        print("‚úÖ –†–∞–º–∫–∞ –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è –∏ —Ç–æ—á–Ω–æ –ø–æ —Ä–∞–∑–º–µ—Ä—É")
    else:
        print("‚ùå –†–∞–º–∫–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    print("\n" + "=" * 50)
    print("–¢–ï–°–¢ –í –ö–û–ù–¢–ï–ö–°–¢–ï –ü–û–õ–ù–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø:")
    
    result = format_slot_result(
        slot1="üçä", slot2="üçä", slot3="üçä", 
        is_win=True, 
        reward_text="10‚ÇΩ", 
        prize_name="–ê–ø–µ–ª—å—Å–∏–Ω", 
        reward_type="money"
    )
    print(result)

if __name__ == '__main__':
    test_frame_size()
