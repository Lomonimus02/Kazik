#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import sys
import os
import sqlite3
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database.models import (
    get_or_create_user, get_user_profile, delete_user_everywhere_full,
    create_order, update_balance
)

def test_user_deletion():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("üß™ –¢–ï–°–¢ –£–î–ê–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_tg_id = 999999999
        test_username = "test_user_delete"
        test_full_name = "Test User Delete"
        test_reg_date = "2025-07-07"
        
        print(f"\n1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_tg_id}...")
        user = get_or_create_user(test_tg_id, test_full_name, test_username, test_reg_date)
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        print("\n2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞...")
        update_balance(test_tg_id, 100.0)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        print("\n3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞...")
        create_order(test_tg_id, "telegram_premium", 100.0, "pending")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        profile = get_user_profile(test_tg_id)
        if profile:
            print(f"   –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω: {profile['username']}, –±–∞–ª–∞–Ω—Å: {profile['balance']}")
        else:
            print("   ‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
        print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î...")
        conn = sqlite3.connect('data/users.db')
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º user_id
        cursor.execute('SELECT id FROM users WHERE tg_id=?', (test_tg_id,))
        user_row = cursor.fetchone()
        if user_row:
            user_id = user_row[0]
            print(f"   User ID: {user_id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
            cursor.execute('SELECT COUNT(*) FROM orders WHERE user_id=?', (user_id,))
            orders_count = cursor.fetchone()[0]
            print(f"   –ó–∞–∫–∞–∑–æ–≤: {orders_count}")
        
        conn.close()
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\n6. –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_tg_id}...")
        delete_user_everywhere_full(test_tg_id)
        print("   –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω
        print("\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è...")
        profile_after = get_user_profile(test_tg_id)
        if profile_after:
            print("   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        else:
            print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("\n8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        conn = sqlite3.connect('data/users.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
        cursor.execute('SELECT COUNT(*) FROM orders WHERE user_id=?', (user_id,))
        orders_after = cursor.fetchone()[0]
        print(f"   –ó–∞–∫–∞–∑–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {orders_after}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute('SELECT COUNT(*) FROM users WHERE tg_id=?', (test_tg_id,))
        users_after = cursor.fetchone()[0]
        print(f"   –ó–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {users_after}")
        
        conn.close()
        
        if orders_after == 0 and users_after == 0:
            print("\n‚úÖ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ü–†–û–ô–î–ï–ù!")
        else:
            print("\n‚ùå –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ü–†–û–í–ê–õ–ï–ù!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_user_deletion()
