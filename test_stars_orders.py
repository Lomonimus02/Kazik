#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∑–≤–µ–∑–¥
"""
import asyncio
import os
import sys
import json
import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.abspath('.'))

from app.database.models import (
    get_or_create_user, get_user_profile, create_order, 
    get_order_by_id, update_order_status, get_user_profile_by_id
)

def test_stars_order_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∑–∞–∫–∞–∑–æ–≤ –∑–≤–µ–∑–¥"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫–∞–∑–æ–≤ –∑–≤–µ–∑–¥...")
    
    try:
        # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\n1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        test_tg_id = 999003
        test_name = "–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ó–≤–µ–∑–¥—ã"
        test_username = "test_stars_user"
        reg_date = "2024-01-01"
        
        get_or_create_user(test_tg_id, test_name, test_username, reg_date, None)
        user_profile = get_user_profile(test_tg_id)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_profile['full_name']} (DB ID: {user_profile['id']})")
        
        # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∑–≤–µ–∑–¥
        print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∑–≤–µ–∑–¥...")
        
        order_id = create_order(
            user_id=user_profile['id'],  # –ò—Å–ø–æ–ª—å–∑—É–µ–º database ID
            order_type="stars",
            amount=100.0,  # –¶–µ–Ω–∞ –≤ —Ä—É–±–ª—è—Ö
            status="pending",
            file_id="test_file_id",
            extra_data={
                "amount": 50,  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥
                "recipient": "@test_stars_user"
            }
        )
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ –∑–≤–µ–∑–¥: ID {order_id}")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞...")
        
        order = get_order_by_id(order_id)
        if order:
            print(f"‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω:")
            print(f"   - ID: {order['id']}")
            print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (DB ID): {order['user_id']}")
            print(f"   - –¢–∏–ø: {order['order_type']}")
            print(f"   - –°—É–º–º–∞: {order['amount']}‚ÇΩ")
            print(f"   - –°—Ç–∞—Ç—É—Å: {order['status']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º extra_data
            if order['extra_data']:
                extra_data = json.loads(order['extra_data'])
                print(f"   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥: {extra_data.get('amount', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"   - –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {extra_data.get('recipient', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
        else:
            print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –¢–µ—Å—Ç 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ (–∏–º–∏—Ç–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º)
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞...")
        
        confirm_time = datetime.datetime.now().strftime('%H:%M %d.%m.%Y')
        extra_data_update = {
            **json.loads(order['extra_data'] if order['extra_data'] else '{}'),
            "confirmed_at": confirm_time,
            "confirmed_by": "@test_admin"
        }
        
        success = update_order_status(
            order_id=order_id,
            status="completed",
            extra_data=extra_data_update
        )
        
        if success:
            print(f"‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
            updated_order = get_order_by_id(order_id)
            if updated_order:
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω: {updated_order['status']}")
                if updated_order['extra_data']:
                    updated_extra = json.loads(updated_order['extra_data'])
                    print(f"‚úÖ –í—Ä–µ–º—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {updated_extra.get('confirmed_at', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª: {updated_extra.get('confirmed_by', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞!")
            return False
        
        # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ database ID
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        user_profile_by_id = get_user_profile_by_id(user_profile['id'])
        if user_profile_by_id:
            print(f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω –ø–æ DB ID:")
            print(f"   - Telegram ID: {user_profile_by_id['tg_id']}")
            print(f"   - –ò–º—è: {user_profile_by_id['full_name']}")
            print(f"   - Username: {user_profile_by_id['username']}")
        else:
            print("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –¢–µ—Å—Ç 6: –¢–µ—Å—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        print("\n6Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞...")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π –∑–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        order_id_2 = create_order(
            user_id=user_profile['id'],
            order_type="stars",
            amount=200.0,
            status="pending",
            file_id="test_file_id_2",
            extra_data={
                "amount": 100,
                "recipient": "@test_stars_user"
            }
        )
        
        # –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞–∫–∞–∑
        reject_time = datetime.datetime.now().strftime('%H:%M %d.%m.%Y')
        reject_extra_data = {
            **json.loads(get_order_by_id(order_id_2)['extra_data'] if get_order_by_id(order_id_2)['extra_data'] else '{}'),
            "rejected_at": reject_time,
            "rejected_by": "@test_admin"
        }
        
        success_reject = update_order_status(
            order_id=order_id_2,
            status="rejected",
            extra_data=reject_extra_data
        )
        
        if success_reject:
            print(f"‚úÖ –ó–∞–∫–∞–∑ #{order_id_2} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω")
            rejected_order = get_order_by_id(order_id_2)
            if rejected_order and rejected_order['status'] == 'rejected':
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω: {rejected_order['status']}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞!")
            return False
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫–∞–∑–æ–≤ –∑–≤–µ–∑–¥ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    result = test_stars_order_system()
    if result:
        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤ –∑–≤–µ–∑–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–∏—Å—Ç–µ–º–µ –∑–∞–∫–∞–∑–æ–≤ –∑–≤–µ–∑–¥!")
        sys.exit(1)
